{"version":3,"file":"WordCard.js","sources":["components/WordCard.vue","D:/SofterWare/HBuilderX.3.98.2023112510/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RTovMjAyNWNvZGUvd29yZHMtZmxhc2gtdW5pYXBwL3dvcmRzLWZsYXNoLXVuaWFwcC9jb21wb25lbnRzL1dvcmRDYXJkLnZ1ZQ"],"sourcesContent":["<template>\n  <!-- 整体容器 -->\n  <view class=\"container\">\n    <!-- 单词卡片主体 -->\n    <view class=\"word-card\">\n      <view class=\"word-content\">\n        <!-- 英文单词展示区域，带动画效果 -->\n        <view class=\"word\">\n          <text\n            v-for=\"(letter, index) in wordLetters\"\n            :key=\"index\"\n            :class=\"['letter', `animate-${currentAnimation}`]\"\n            :style=\"{ animationDelay: `${index * 0.1}s` }\"\n          >{{ letter }}</text>\n        </view>\n        \n        <!-- 音标和喇叭图标 -->\n        <view class=\"phonetic-container\">\n          <text class=\"phonetic\">{{ word?.phonetic_symbol }}</text>\n          <text class=\"speaker-icon\" @tap=\"playAudio\">🔊</text>\n        </view>\n        \n        <!-- 中文释义 -->\n        <view class=\"mean\">{{ word?.mean }}</view>\n      </view>\n    </view>\n    \n    <!-- 动画控制按钮组 -->\n    <view class=\"animation-controls\">\n      <button \n        v-for=\"type in animationTypes\" \n        :key=\"type\"\n        class=\"animation-btn\"\n        :class=\"{ active: currentAnimation === type }\"\n        @tap=\"changeAnimation(type)\"\n      >\n        {{ type }}\n      </button>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, computed, onUnmounted } from 'vue'\nimport { useWordStore } from '@/store/word'\n\n// 获取状态管理实例\nconst store = useWordStore()\n\n// 获取当前单词数据\nconst word = computed(() => store.currentWord)\n// 将单词拆分为字母数组，用于动画显示\nconst wordLetters = computed(() => word.value ? word.value.word.split('') : [])\n\n// 定义可用的动画类型\nconst animationTypes = ['pop', 'jump', 'flip', 'blink', 'all']\n// 当前选中的动画类型\nconst currentAnimation = ref('pop')\n\n// 切换动画效果\nconst changeAnimation = (type) => {\n  currentAnimation.value = type\n}\n\n// 播放音频\nconst playAudio = () => {\n  store.playCurrentWordAudio()\n}\n\n// 组件卸载时清理音频\nonUnmounted(() => {\n  store.cleanupAudio()\n})\n</script>\n\n<style>\n/* 整体容器样式 */\n.container {\n  width: 90%;\n  max-width: 600rpx;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40rpx;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%); /* 实现绝对居中 */\n}\n\n/* 单词卡片样式 */\n.word-card {\n  background-color: #ffffff;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\n  padding: 60rpx 40rpx;\n  width: 100%;\n}\n\n/* 卡片内容布局 */\n.word-content {\n  min-height: 500rpx;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  gap: 50rpx;\n}\n\n/* 单词区域样式 */\n.word {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 4rpx;\n  width: 100%;\n  text-align: center;\n  margin: 40rpx 0;\n}\n\n/* 字母样式 */\n.letter {\n  font-size: 96rpx;\n  font-weight: bold;\n  color: #333;\n  display: inline-block;\n}\n\n/* 动画控制按钮组样式 */\n.animation-controls {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20rpx;\n  justify-content: center;\n  width: 100%;\n  padding: 20rpx;\n  background-color: #ffffff;\n  border-radius: 16rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\n}\n\n/* 动画按钮样式 */\n.animation-btn {\n  font-size: 24rpx;\n  padding: 10rpx 20rpx;\n  background-color: #f0f0f0;\n  border: none;\n  border-radius: 8rpx;\n  min-width: 120rpx;\n}\n\n/* 激活状态的按钮样式 */\n.animation-btn.active {\n  background-color: #4CAF50;\n  color: white;\n}\n\n/* 动画关键帧定义 */\n/* 弹出动画 */\n@keyframes pop {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.4); }\n}\n\n/* 跳跃动画 */\n@keyframes jump {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-20rpx); }\n}\n\n/* 翻转动画 */\n@keyframes flip {\n  0%, 100% { transform: rotateY(0); }\n  50% { transform: rotateY(90deg); }\n}\n\n/* 闪烁动画 */\n@keyframes blink {\n  0%, 100% { opacity: 1; color: #333; }\n  50% { opacity: 0.5; color: #FFD700; }\n}\n\n/* 组合动画 */\n@keyframes all {\n  0%, 100% {\n    transform: scale(1) translateY(0) rotateY(0);\n    color: #333;\n  }\n  50% {\n    transform: scale(1.2) translateY(-10rpx) rotateY(180deg);\n    color: #FFD700;\n  }\n}\n\n/* 为每个动画类型添加动画属性 */\n.letter.animate-pop { animation: pop 0.5s ease-in-out infinite; }\n.letter.animate-jump { animation: jump 0.5s ease-in-out infinite; }\n.letter.animate-flip { animation: flip 0.5s ease-in-out infinite; }\n.letter.animate-blink { animation: blink 0.5s ease-in-out infinite; }\n.letter.animate-all { animation: all 0.5s ease-in-out infinite; }\n\n/* 音标和喇叭容器 */\n.phonetic-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16rpx;\n}\n\n/* 音标样式 */\n.phonetic {\n  font-size: 36rpx;\n  color: #666;\n  text-align: center;\n}\n\n/* 喇叭图标样式 */\n.speaker-icon {\n  font-size: 36rpx;\n  padding: 10rpx;\n  cursor: pointer;\n  opacity: 0.7;\n}\n\n.speaker-icon:active {\n  opacity: 1;\n  transform: scale(1.1);\n}\n\n/* 释义样式 */\n.mean {\n  font-size: 32rpx;\n  color: #666;\n  text-align: center;\n  padding-top: 20rpx;\n  border-top: 1rpx solid #eee; /* 添加顶部分隔线 */\n}\n</style>","import Component from 'E:/2025code/words-flash-uniapp/words-flash-uniapp/components/WordCard.vue'\nwx.createComponent(Component)"],"names":["useWordStore","computed","ref","onUnmounted","Component"],"mappings":";;;;;;AA+CA,UAAM,QAAQA,WAAAA,aAAc;AAG5B,UAAM,OAAOC,cAAQ,SAAC,MAAM,MAAM,WAAW;AAE7C,UAAM,cAAcA,cAAQ,SAAC,MAAM,KAAK,QAAQ,KAAK,MAAM,KAAK,MAAM,EAAE,IAAI,CAAA,CAAE;AAG9E,UAAM,iBAAiB,CAAC,OAAO,QAAQ,QAAQ,SAAS,KAAK;AAE7D,UAAM,mBAAmBC,cAAG,IAAC,KAAK;AAGlC,UAAM,kBAAkB,CAAC,SAAS;AAChC,uBAAiB,QAAQ;AAAA,IAC3B;AAGA,UAAM,YAAY,MAAM;AACtB,YAAM,qBAAsB;AAAA,IAC9B;AAGAC,kBAAAA,YAAY,MAAM;AAChB,YAAM,aAAc;AAAA,IACtB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvED,GAAG,gBAAgBC,SAAS;"}